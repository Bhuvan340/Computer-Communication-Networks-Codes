BIT STUFFING
#include<stdio.h> <stdlib.h>
#define MAX_SIZE 100
void bitStuffing(char*data,int*size)
{ int count=0; int newSize=*size;
for(int i=0; i<*size; i++) {
if(data[i]='1') { count++; } else {
count=0; } if(count==5) {
for(int j=newSize; j>i+1; j--) {
data[j]=data[j-1]; } data[i+1]='0';
newSize++; count=0; } }
*size=newSize; }
void bitDestuffing(char*data,int*size) {
int count = 0; int newSize==*size;
for(int i=0; i<*size; i++) { if(data[i]=='1')
{ count++; } else { count=0; }
if(count==5 && i<newSize-1 && data[i+1]=='0')
{ for(int j=i+1; j<newSize; j++) {
data[j]=data[j+1]; } count=0; newSize--; } }
*size=newSize; } int main() {
char data[MAX_SIZE]; int size;
printf("Enter the data(consisting of 0's and 1's):");
scanf("%s",data); for(size=0;data[size]!='\0';size++);
bitStuffing(data,&size);
printf("Stuffed data:%s\n",data);
bitDestuffing(data,&size);
printf("Destuffed data:%s\n",data);
return 0; }
